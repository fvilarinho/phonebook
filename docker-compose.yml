services:
  frontend:
    image: nginx:latest
    container_name: frontend
    restart: always
    volumes: [ "./etc/frontend.conf:/etc/nginx/conf.d/default.conf" ]
    hostname: frontend
    ports: [ "80:80" ]
    depends_on: [ backend ]

  backend:
    build:
      context: .
    image: ${DOCKER_REGISTRY_URL}/${DOCKER_REGISTRY_ID}/phonebook:${BUILD_VERSION}
    container_name: backend
    environment:
      DB_HOST: "${DB_HOST}"
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASS: "${DB_PASS}"
      APP_USER: "${APP_USER}"
      APP_PASS: "${APP_PASS}"
    restart: always
    hostname: backend
    depends_on: [ database, jaeger ]

  database:
    image: mariadb:latest
    container_name: database
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASS}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASS}"
    volumes: [ "database_data:/var/lib/mysql" ]
    restart: always
    hostname: database

  node-agent:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-agent
    command: [ "--path.rootfs=/host", "--web.listen-address=0.0.0.0:9100" ]
    volumes: [ "/:/host:ro,rslave" ]
    restart: always
    hostname: node-agent

  frontend-agent:
    image: nginx/nginx-prometheus-exporter:1.1.0
    container_name: frontend-agent
    command: [ "--nginx.scrape-uri=http://frontend/stub_status", "--web.listen-address=0.0.0.0:9101" ]

  database-agent:
    image: quay.io/prometheus/mysqld-exporter:latest
    container_name: database-agent
    environment:
      DB_HOST: "${DB_HOST}"
      DB_ROOT_PASS: "${DB_ROOT_PASS}"
    command: [ "--mysqld.username=root:$DB_ROOT_PASS", "--mysqld.address=$DB_HOST:3306", "--web.listen-address=0.0.0.0:9103" ]
    hostname: database-agent
    depends_on: [ database ]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command: [ "--config.file=/etc/prometheus/prometheus.yml" ]
    volumes: [ "./etc/prometheus.yml:/etc/prometheus/prometheus.yml" ]
    hostname: prometheus
    ports: [ "9090:9090" ]
    depends_on: [ backend, node-agent, frontend-agent, database-agent ]

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: always
    hostname: jaeger
    ports: [ "16686:16686" ]

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    hostname: grafana
    ports: [ "3000:81" ]
    depends_on: [ prometheus, jaeger ]

volumes:
  database_data: